/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package matrixjavagui.hiya;

import java.awt.Dimension;
import java.awt.TextField;

/**
 *
 * @author Touyashi
 */
public class Transpose extends javax.swing.JFrame {
    int m1 = 0, m2 = 0, hasilY;
    TextField matrix1[], matrix2[];

    /**
     * Creates new form Transpose
     */
    public Transpose() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelRow = new java.awt.Label();
        labelColumn = new java.awt.Label();
        textFieldRow = new java.awt.TextField();
        textFieldColumn = new java.awt.TextField();
        buttonShowColumn = new java.awt.Button();
        buttonTranspose = new java.awt.Button();
        buttonBack = new java.awt.Button();
        scrollPaneContent = new java.awt.ScrollPane();
        panelContent = new java.awt.Panel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mengubah Urutan");

        labelRow.setText("Baris");

        labelColumn.setText("Kolom");

        textFieldRow.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        textFieldRow.setText("0");

        textFieldColumn.setText("0");

        buttonShowColumn.setLabel("Tampilkan Kolom");
        buttonShowColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonShowColumnActionPerformed(evt);
            }
        });

        buttonTranspose.setEnabled(false);
        buttonTranspose.setLabel("Mengubah Urutan");
        buttonTranspose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTransposeActionPerformed(evt);
            }
        });

        buttonBack.setLabel("Kembali");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        panelContent.setPreferredSize(new java.awt.Dimension(1000, 500));

        javax.swing.GroupLayout panelContentLayout = new javax.swing.GroupLayout(panelContent);
        panelContent.setLayout(panelContentLayout);
        panelContentLayout.setHorizontalGroup(
            panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 807, Short.MAX_VALUE)
        );
        panelContentLayout.setVerticalGroup(
            panelContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 492, Short.MAX_VALUE)
        );

        scrollPaneContent.add(panelContent);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonBack, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textFieldColumn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonTranspose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textFieldRow, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonShowColumn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(buttonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(textFieldRow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(buttonShowColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonTranspose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneContent, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
        matrix.Main main = new matrix.Main();
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_buttonBackActionPerformed

    private void buttonShowColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonShowColumnActionPerformed
        // TODO add your handling code here:
        int Kolom = Integer.parseInt(textFieldColumn.getText());
        int Baris = Integer.parseInt(textFieldRow.getText());
        int Dimension = Kolom*Baris;
        
        if (Dimension > 0) {
            if (m1 > 0) {
                for (int i = 0; i < matrix1.length; i++) {
                    matrix1[i].setVisible(false);
                }
            }

            if (m2 > 0) {
                for (int i = 0; i < matrix2.length; i++) {
                    matrix2[i].setVisible(false);
                }
            }

            matrix1 = new TextField[Dimension];
            int num = 0;
            int x = 10;
            int y = 10;
            for (int b = 1; b <= Baris; b++) {
                for (int k = 1; k <= Kolom; k++) {
                    matrix1[num] = new TextField();
                    matrix1[num].setBounds(x, y, 35, 35);
                    matrix1[num].setText("0");
                    panelContent.add(matrix1[num]);

                    num++;
                    x += 40;
                }

                x = 10;
                y += 40;
                hasilY = y+50;
            }
            m1 = 1;
            buttonTranspose.setEnabled(true);
        } else {
            buttonTranspose.setEnabled(false);
        }
    }//GEN-LAST:event_buttonShowColumnActionPerformed

    private void buttonTransposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTransposeActionPerformed
        // TODO add your handling code here:
        int Kolom = Integer.parseInt(textFieldColumn.getText());
        int Baris = Integer.parseInt(textFieldRow.getText());
        int Dimension = Kolom*Baris;
        
        if (m2 > 0) {
            for (int i = 0; i < matrix2.length; i++) {
                matrix2[i].setVisible(false);
            }
        }

        matrix2 = new TextField[Dimension];
        int num = 0;
        int x = 10;
        int y = hasilY;
        for (int k = 1; k <= Baris; k++) {
            for (int b = 1; b <= Kolom; b++) {
                matrix2[num] = new TextField();
                matrix2[num].setBounds(x, y, 35, 35);
                matrix2[num].setText(matrix1[num].getText());
                panelContent.add(matrix2[num]);

                num++;
                y += 40;
            }
            x += 40;
            y = hasilY;
        }
        m2 = 1;
    }//GEN-LAST:event_buttonTransposeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transpose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transpose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transpose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transpose.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transpose().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button buttonBack;
    private java.awt.Button buttonShowColumn;
    private java.awt.Button buttonTranspose;
    private java.awt.Label labelColumn;
    private java.awt.Label labelRow;
    private java.awt.Panel panelContent;
    private java.awt.ScrollPane scrollPaneContent;
    private java.awt.TextField textFieldColumn;
    private java.awt.TextField textFieldRow;
    // End of variables declaration//GEN-END:variables
}
